import React from 'react';

declare type InputAttributes = Omit<React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, keyof SeparatorInputProps>;
declare type Separator = ',' | '.' | ' ';
interface SeparatorInputProps {
    value?: number | string | null;
    precision?: number;
    decimalSeparator?: Exclude<Separator, ' '>;
    thousandSeparator?: Separator;
    onValueChange?: (value: {
        formattedValue: string;
        numberValue: number;
    }) => void;
    onChange?: React.InputHTMLAttributes<HTMLInputElement>['onChange'];
    onBlur?: React.InputHTMLAttributes<HTMLInputElement>['onBlur'];
}

declare const withSeparator: <P extends unknown>(Component: React.ComponentType<P> | "input") => (props: (P extends object ? Omit<P, keyof SeparatorInputProps> : InputAttributes) & SeparatorInputProps) => JSX.Element;
declare const SeparatorInput: (props: InputAttributes & SeparatorInputProps) => JSX.Element;

export { SeparatorInput, withSeparator };
